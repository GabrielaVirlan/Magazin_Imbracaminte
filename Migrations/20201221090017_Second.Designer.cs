// <auto-generated />
using System;
using MagazinImbracaminte.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MagazinImbracaminte.Migrations
{
    [DbContext(typeof(MagazinImbracaminteContext))]
    [Migration("20201221090017_Second")]
    partial class Second
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("MagazinImbracaminte.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ProductCartId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CartId");

                    b.HasIndex("ProductCartId");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("MagazinImbracaminte.Models.Delivery", b =>
                {
                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Country")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DeliveryId");

                    b.HasIndex("CartId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("MagazinImbracaminte.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int?>("ProductCartId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductDetailsId")
                        .HasColumnType("int");

                    b.Property<int>("Quantities")
                        .HasColumnType("int");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductCartId");

                    b.HasIndex("ProductDetailsId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MagazinImbracaminte.Models.ProductCart", b =>
                {
                    b.Property<int>("ProductCartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("ProductCartId");

                    b.ToTable("ProductCarts");
                });

            modelBuilder.Entity("MagazinImbracaminte.Models.ProductDetails", b =>
                {
                    b.Property<int>("ProductDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Material")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Size")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ProductDetailsId");

                    b.ToTable("ProductDetailss");
                });

            modelBuilder.Entity("MagazinImbracaminte.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("RoleId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("MagazinImbracaminte.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EmailAdress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Passworld")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MagazinImbracaminte.Models.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("UserRoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("MagazinImbracaminte.Models.Cart", b =>
                {
                    b.HasOne("MagazinImbracaminte.Models.ProductCart", "ProductCart")
                        .WithMany("Carts")
                        .HasForeignKey("ProductCartId");

                    b.HasOne("MagazinImbracaminte.Models.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId");

                    b.Navigation("ProductCart");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MagazinImbracaminte.Models.Delivery", b =>
                {
                    b.HasOne("MagazinImbracaminte.Models.Cart", "Cart")
                        .WithOne("DeliveryAdress")
                        .HasForeignKey("MagazinImbracaminte.Models.Delivery", "CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MagazinImbracaminte.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Cart");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MagazinImbracaminte.Models.Product", b =>
                {
                    b.HasOne("MagazinImbracaminte.Models.ProductCart", "ProductCart")
                        .WithMany("Products")
                        .HasForeignKey("ProductCartId");

                    b.HasOne("MagazinImbracaminte.Models.ProductDetails", "ProductDetails")
                        .WithMany("Products")
                        .HasForeignKey("ProductDetailsId");

                    b.Navigation("ProductCart");

                    b.Navigation("ProductDetails");
                });

            modelBuilder.Entity("MagazinImbracaminte.Models.Role", b =>
                {
                    b.HasOne("MagazinImbracaminte.Models.UserRole", "UserRole")
                        .WithMany("Roles")
                        .HasForeignKey("UserRoleId");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("MagazinImbracaminte.Models.User", b =>
                {
                    b.HasOne("MagazinImbracaminte.Models.UserRole", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("UserRoleId");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("MagazinImbracaminte.Models.Cart", b =>
                {
                    b.Navigation("DeliveryAdress");
                });

            modelBuilder.Entity("MagazinImbracaminte.Models.ProductCart", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("MagazinImbracaminte.Models.ProductDetails", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("MagazinImbracaminte.Models.User", b =>
                {
                    b.Navigation("Carts");
                });

            modelBuilder.Entity("MagazinImbracaminte.Models.UserRole", b =>
                {
                    b.Navigation("Roles");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
